name: CI

on:
  push:
    branches:
      [ develop_backup, feature/deploy ]

  pull_request:
    branches:
      [ develop_backup, feature/deploy ]

jobs:

  test:
  # актуальная версия убунту сервера
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v4
        with:
        # актуальная версия питона
          python-version: '3.10'

      - name: install deps
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install black
          pip install -r requirements.txt

      - name: run flake8
        run: flake8

      - name: run black
        run: black --diff -S .

      - name: Create .env file
        run: |
          echo "SECRET_KEY=django-insecure-ug67bb!lyca-aewcz)!lmhq54_yfsvb81%8)ni4y*0$9*0b&ti" >> .env
          echo "DEBUG=true" >> .env
          echo "ENV_NAME=local" >> .env
          echo "DB_ENGINE=django.db.backends.postgresql" >> .env
          echo "POSTGRES_DB=postgres" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=postgres" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Start PostgreSQL with docker-compose
        run: docker-compose -f infra/docker-compose.only_db.yml up -d

      - name: Set migrations
        run: |
          python src/manage.py makemigrations
          python src/manage.py makemigrations phone
          python src/manage.py migrate

      - name: Django tests
        run: python src/manage.py test tests

      - name: Stop PostgreSQL with docker-compose
        run: |
          pwd
          cd infra
          pwd
          docker-compose down
